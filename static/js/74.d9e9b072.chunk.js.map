{"version":3,"file":"static/js/74.d9e9b072.chunk.js","mappings":"mLAEO,MAAMA,E,OAAUC,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iI,aCCjC,MAgBA,EAhBeC,KAEPC,EAAAA,EAAAA,KAACN,EAAO,CAAAO,UACTD,EAAAA,EAAAA,KAACE,EAAAA,GAAe,CACrBC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,0BACVC,aAAc,CAAC,EACfC,aAAa,0BACbC,WAAa,UACbC,MAAQ,c,sBCXV,MAiBA,EAjBoBC,IAAgB,IAAf,QAACC,GAAQD,EAC1B,MAAME,GAAWC,EAAAA,EAAAA,MACXC,EAAiBH,EAAQI,QAAOC,GAAUA,EAAOC,IAAMD,EAAOE,OACpE,OACInB,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAA,MAAAC,SACKc,EAAeK,KAAIH,IAChBjB,EAAAA,EAAAA,KAAA,MAAAC,UACID,EAAAA,EAAAA,KAACqB,EAAAA,GAAI,CAACC,GAAE,YAAAC,OAAcN,EAAOC,IAAMM,MAAO,CAAEC,KAAMZ,GAAWZ,UACzDD,EAAAA,EAAAA,KAAA,MAAAC,SAAKgB,EAAOE,UAFXF,EAAOC,SAOtB,E,aCQdQ,EAAAA,EAAMC,SAASC,QAAU,kDAMlB,MCYP,EArCoBC,KACjB,MAAOjB,EAASkB,IAAcC,EAAAA,EAAAA,UAAS,KAC/BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,OAC5BG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,GAkB3C,OAhBAK,EAAAA,EAAAA,YAAU,KACYC,WACd,IACIF,GAAa,GACb,MAAMG,ODgBMD,iBACHX,EAAAA,EAAMa,IAAI,WAAY,CAACC,YAC9BC,KClBwBC,GAC1BZ,EAAWQ,EACf,CAAE,MAAON,GACLC,EAASD,EACb,CAAC,QACGG,GAAa,EACjB,GAGJQ,EAAW,GACZ,KAGC3C,EAAAA,EAAAA,KAAC4C,EAAAA,EAAI,CAAA3C,UACD4C,EAAAA,EAAAA,MAAA,OAAA5C,SAAA,CACKiC,IAAalC,EAAAA,EAAAA,KAACD,EAAM,KACrBC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAK,CAAA7C,SAAC,YACN+B,GACGa,EAAAA,EAAAA,MAAA,KAAA5C,SAAA,CAAG,UAAQ+B,EAAMe,WACL,IAAZnC,GACAZ,EAAAA,EAAAA,KAACgD,EAAW,CAACpC,QAASA,KAErBsB,IAAalC,EAAAA,EAAAA,KAAA,KAAAC,SAAG,0BAGtB,C,mECtCf,MAAM2C,EAAOjD,EAAAA,EAAOsD,KAAIpD,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+CAMlBgD,EAAQnD,EAAAA,EAAOuD,GAAEC,IAAAA,GAAArD,EAAAA,EAAAA,GAAA,oB","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/AdvertsList/AdvertsList.jsx","services/api.jsx","pages/CatalogPage.jsx","pages/Pages.styled.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\nwidth: 180px;\n  height: auto;\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;`","import { MagnifyingGlass } from 'react-loader-spinner';\nimport { Wrapper } from './Loader.styled';\n\nconst Loader = () => {\n    return (\n        <Wrapper>\n       <MagnifyingGlass\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"MagnifyingGlass-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"MagnifyingGlass-wrapper\"\n  glassColor = '#c0efff'\n  color = '#e15b64'\n/> \n    </Wrapper>\n    ) \n}\nexport default Loader;","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst AdvertsList = ({adverts}) => {\n    const location = useLocation();\n    const visibleAdverts = adverts.filter(advert => advert.id && advert.name);\n    return (\n        <div>\n            <ul>\n                {visibleAdverts.map(advert => (\n                    <li key={advert.id}>\n                        <Link to={`/adverts/${advert.id}`} state={{ from: location }}>\n                            <h1>{advert.name}</h1>\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\nexport default AdvertsList;","// import axios from \"axios\";\n// export const PROJECT_TOKEN = \"661fafdb16358961cd9523c1\";\n// export const URL = `https://${PROJECT_TOKEN}.mockapi.io/api/`;\n\n// const options = {\n//   method: 'GET',\n//   headers: {\n//     accept: 'application/json'\n//   }\n// };\n\n// export const fetchAdvert = async () => { \n//     try {\n//         const responce = await axios.get(`${URL}adverts`, options)\n//         console.log(responce.data);\n//         // return responce.data.results;\n//     }\n//     // .then(response => response.data.results)\n//         catch (error) {\n//     console.error('Error fetching adverts:', error);\n//             throw error;\n//         };\n// };\n\nimport axios from \"axios\";\naxios.defaults.baseURL = 'https://661fafdb16358961cd9523c1.mockapi.io/api';\n// const params = {\n//     page : 1,\n//     limit : 4,\n//     completed: false\n//   };\nexport const fetchAdverts = async (params) => {\n  const response = await axios.get('/adverts', {params});\n  return response.data;\n};\n\n// export const fetchAdverts = async (page = 1, limit = 4, completed = false) => {\n//   const url = `https://661fafdb16358961cd9523c1.mockapi.io/api/adverts`;\n//   const params = {\n//     page,\n//     limit,\n//     completed\n//   };\n\n//   try {\n//     const response = await axios.get(url, { params });\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching adverts:', error);\n//     throw error;\n//   }\n// };\n\n","import { useState, useEffect } from 'react';\nimport { Main, Title } from './Pages.styled';\nimport Loader from '../components/Loader/Loader';\nimport AdvertsList from '../components/AdvertsList/AdvertsList';\nimport { fetchAdverts } from 'services/api';\n\nconst CatalogPage = () => {\n   const [adverts, setAdverts] = useState([]);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    \n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                setIsLoading(true);\n                const advertsData = await fetchAdverts();\n                setAdverts(advertsData);\n            } catch (error) {\n                setError(error);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    return (\n        <Main>\n            <div>\n                {isLoading && <Loader />}\n                <Title>Adverts</Title>\n                {error ? (\n                    <p>Error: {error.message}</p>\n                ) : adverts !== 0 ? (\n                    <AdvertsList adverts={adverts} />\n                ) : (\n                    !isLoading && <p>No adverts found.</p> // Додана умова для перевірки isLoading\n                )}\n            </div>\n        </Main>\n    );\n}\nexport default CatalogPage;","import styled from '@emotion/styled';\n\nconst Main = styled.main`\ndisplay: flex;\nmargin-top: 20px;\n\n`\n\nconst Title = styled.h2`\nmargin: 0%;`\nexport { Main, Title }"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","Loader","_jsx","children","MagnifyingGlass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","_ref","adverts","location","useLocation","visibleAdverts","filter","advert","id","name","map","Link","to","concat","state","from","axios","defaults","baseURL","CatalogPage","setAdverts","useState","error","setError","isLoading","setIsLoading","useEffect","async","advertsData","get","params","data","fetchAdverts","fetchData","Main","_jsxs","Title","message","AdvertsList","main","h2","_templateObject2"],"sourceRoot":""}